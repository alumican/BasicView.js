var ALUMICAN;if(!ALUMICAN)ALUMICAN={};ALUMICAN.BasicView=function(a,b,c,d,e,f,g){this.container;this.scene;this.camera;this.renderer;this.mouseX;this.mouseY;this.oldMouseX;this.oldMouseY;this.viewportWidth;this.viewportHeight;this.isMouseDown;this.isMouseDragging;this.isKeyDown;this.rendererType;this.cameraType;this.useAutoScaling;this.stats;this._initialize.apply(this,arguments)};ALUMICAN.BasicView.version="0.1.1";ALUMICAN.BasicView.prototype={setup:function(){},update:function(){},draw:function(){},exit:function(){},onMouseDown:function(a){},onMouseUp:function(a){},onMouseMove:function(a){},onMouseDragged:function(a){},onKeyDown:function(a,b){},onKeyUp:function(a,b){},onResize:function(a){},_initialize:function(a,b,c,d,e,f,g){if(a==undefined)a="WebGL";if(b==undefined)b={};if(c==undefined)c="Perspective";if(d==undefined)d=true;if(e==undefined)e=true;if(f==undefined)f=640;if(g==undefined)g=480;if(d){console.log("BasicView "+ALUMICAN.BasicView.version)}if(a=="WebGL"&&!Detector.webgl){Detector.addGetWebGLMessage();return}{this.rendererType=a;this.cameraType=c;this.useAutoScaling=e;this.isMouseDown=false;this.isMouseDragging=false;this.isKeyDown=false;this.oldMouseX=this.mouseX=0;this.oldMouseY=this.mouseY=0;var h=this;$(function(){if(h.useAutoScaling){h.viewportWidth=$(window).width();h.viewportHeight=$(window).height()}else{h.viewportWidth=f;h.viewportHeight=g}h.scene=new THREE.Scene;switch(c){case"Orthographic":h.camera=new THREE.OrthographicCamera(-h.viewportWidth*.5,h.viewportWidth*.5,h.viewportHeight*.5,-h.viewportHeight*.5,1,1e4);break;default:h.cameraType="Perspective";h.camera=new THREE.PerspectiveCamera(75,h.viewportWidth/h.viewportHeight,1,1e4);break}h.camera.position.z=1e3;switch(a){case"Canvas":h.renderer=new THREE.CanvasRenderer(b);break;case"SVG":h.renderer=new THREE.SVGRenderer;break;case"DOM":h.renderer=new THREE.DOMRenderer;break;default:h.rendererType="WebGL";h.renderer=new THREE.WebGLRenderer(b);break}h.renderer.setSize(h.viewportWidth,h.viewportHeight);h.container=$("<div>").get(0);$(document.body).append(h.container);if(d){h.stats=new Stats;$(h.stats.domElement).css("position","absolute");$(h.stats.domElement).css("top","0px");$(h.container).append(h.stats.domElement)}h.container.appendChild(h.renderer.domElement);h.scene.add(h.camera);$(document).mousedown(function(a){h._mouseDownHandler(a)});$(document).mousemove(function(a){h._mouseMoveHandler(a)});$(document).mouseup(function(a){h._mouseUpHandler(a)});$(window).keydown(function(a){h._keyDownHandler(a)});$(window).keyup(function(a){h._keyUpHandler(a)});$(window).resize(function(a){h._resizeHandler(a)});$(window).unload(function(a){h._unloadHandler(a)});h.setup();h._enterFrameHandler(null)})}},_enterFrameHandler:function(a){var b=this;requestAnimationFrame(function(a){b._enterFrameHandler(a)});this.oldMouseX=this.mouseX;this.oldMouseY=this.mouseY;this.update();this.draw();if(this.stats)this.stats.update()},_mouseDownHandler:function(a){a.preventDefault();this.isMouseDown=true;this.onMouseDown(a)},_mouseMoveHandler:function(a){a.preventDefault();if(a.pageX==this.mouseX&&a.pageY==this.mouseY)return;this.mouseX=a.pageX;this.mouseY=a.pageY;if(this.isMouseDown){this.isMouseDragging=true;this.onMouseDragged(a)}else{this.onMouseMove(a)}},_mouseUpHandler:function(a){a.preventDefault();this.isMouseDown=false;this.isMouseDragging=false;this.onMouseUp(a)},_keyDownHandler:function(a){this.isKeyDown=true;this.onKeyDown(a.keyCode,a)},_keyUpHandler:function(a){this.isKeyDown=false;this.onKeyUp(a.keyCode,a)},_resizeHandler:function(a){if(this.useAutoScaling){this.viewportWidth=$(window).width();this.viewportHeight=$(window).height()}if(this.useAutoScaling){switch(this.cameraType){case"Orthographic":this.camera.aspect=this.viewportWidth/this.viewportHeight;this.camera.left=-this.viewportWidth*.5;this.camera.right=this.viewportWidth*.5;this.camera.top=this.viewportHeight*.5;this.camera.bottom=-this.viewportHeight*.5;this.camera.updateProjectionMatrix();this.renderer.setSize(this.viewportWidth,this.viewportHeight);break;default:this.camera.aspect=this.viewportWidth/this.viewportHeight;this.camera.updateProjectionMatrix();this.renderer.setSize(this.viewportWidth,this.viewportHeight);break}}this.onResize(a)},_unloadHandler:function(a){this.exit()}}